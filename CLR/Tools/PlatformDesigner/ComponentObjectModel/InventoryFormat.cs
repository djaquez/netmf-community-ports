//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace XsdInventoryFormatObject {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd", IsNullable=false)]
    public partial class InventoryCollection {
        
        private System.Collections.Generic.List<Inventory> inventoriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Inventories")]
        public System.Collections.Generic.List<Inventory> Inventories {
            get {
                return this.inventoriesField;
            }
            set {
                this.inventoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class Inventory {
        
        private System.Collections.Generic.List<Library> librariesField;
        
        private System.Collections.Generic.List<Feature> featuresField;
        
        private System.Collections.Generic.List<MFAssembly> assembliesField;
        
        private System.Collections.Generic.List<MFSolution> solutionsField;
        
        private System.Collections.Generic.List<Processor> processorsField;
        
        private System.Collections.Generic.List<BuildTool> buildToolsField;
        
        private System.Collections.Generic.List<BuildParameter> buildParametersField;
        
        private System.Collections.Generic.List<LibraryCategory> libraryCategoriesField;
        
        private System.Collections.Generic.List<MFProject> projectTemplatesField;
        
        private string nameField;
        
        private string fileField;
        
        private Version versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Libraries")]
        public System.Collections.Generic.List<Library> Libraries {
            get {
                return this.librariesField;
            }
            set {
                this.librariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Features")]
        public System.Collections.Generic.List<Feature> Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Assemblies")]
        public System.Collections.Generic.List<MFAssembly> Assemblies {
            get {
                return this.assembliesField;
            }
            set {
                this.assembliesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Solutions")]
        public System.Collections.Generic.List<MFSolution> Solutions {
            get {
                return this.solutionsField;
            }
            set {
                this.solutionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Processors")]
        public System.Collections.Generic.List<Processor> Processors {
            get {
                return this.processorsField;
            }
            set {
                this.processorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BuildTools")]
        public System.Collections.Generic.List<BuildTool> BuildTools {
            get {
                return this.buildToolsField;
            }
            set {
                this.buildToolsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BuildParameters")]
        public System.Collections.Generic.List<BuildParameter> BuildParameters {
            get {
                return this.buildParametersField;
            }
            set {
                this.buildParametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LibraryCategories")]
        public System.Collections.Generic.List<LibraryCategory> LibraryCategories {
            get {
                return this.libraryCategoriesField;
            }
            set {
                this.libraryCategoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ProjectTemplates")]
        public System.Collections.Generic.List<MFProject> ProjectTemplates {
            get {
                return this.projectTemplatesField;
            }
            set {
                this.projectTemplatesField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class Library {
        
        private string nameField;
        
        private string sizeField;
        
        private string guidField;
        
        private System.Collections.Generic.List<MFComponent> dependenciesField;
        
        private string descriptionField;
        
        private LibraryLevel levelField;
        
        private System.Collections.Generic.List<MFBuildFile> sourceFilesField;
        
        private System.Collections.Generic.List<MFBuildFile> headerFilesField;
        
        private System.Collections.Generic.List<MFBuildFile> includePathsField;
        
        private System.Collections.Generic.List<MFBuildFile> fastCompileFilesField;
        
        private System.Collections.Generic.List<MFBuildFile> otherFilesField;
        
        private string libraryFileField;
        
        private string projectPathField;
        
        private string manifestFileField;
        
        private string groupsField;
        
        private MFComponent libraryCategoryField;
        
        private string documentationField;
        
        private bool platformIndependentField;
        
        private Version versionField;
        
        private MFComponent iSASpecificField;
        
        private MFComponent processorSpecificField;
        
        private string customFilterField;
        
        private bool requiredField;
        
        private bool ignoreDefaultLibPathField;
        
        private bool isStubField;
        
        private System.Collections.Generic.List<MFProperty> propertiesField;
        
        private bool isSolutionWizardVisibleField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dependencies")]
        public System.Collections.Generic.List<MFComponent> Dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public LibraryLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SourceFiles")]
        public System.Collections.Generic.List<MFBuildFile> SourceFiles {
            get {
                return this.sourceFilesField;
            }
            set {
                this.sourceFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HeaderFiles")]
        public System.Collections.Generic.List<MFBuildFile> HeaderFiles {
            get {
                return this.headerFilesField;
            }
            set {
                this.headerFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IncludePaths")]
        public System.Collections.Generic.List<MFBuildFile> IncludePaths {
            get {
                return this.includePathsField;
            }
            set {
                this.includePathsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FastCompileFiles")]
        public System.Collections.Generic.List<MFBuildFile> FastCompileFiles {
            get {
                return this.fastCompileFilesField;
            }
            set {
                this.fastCompileFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OtherFiles")]
        public System.Collections.Generic.List<MFBuildFile> OtherFiles {
            get {
                return this.otherFilesField;
            }
            set {
                this.otherFilesField = value;
            }
        }
        
        /// <remarks/>
        public string LibraryFile {
            get {
                return this.libraryFileField;
            }
            set {
                this.libraryFileField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public string ManifestFile {
            get {
                return this.manifestFileField;
            }
            set {
                this.manifestFileField = value;
            }
        }
        
        /// <remarks/>
        public string Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent LibraryCategory {
            get {
                return this.libraryCategoryField;
            }
            set {
                this.libraryCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public bool PlatformIndependent {
            get {
                return this.platformIndependentField;
            }
            set {
                this.platformIndependentField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent ISASpecific {
            get {
                return this.iSASpecificField;
            }
            set {
                this.iSASpecificField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent ProcessorSpecific {
            get {
                return this.processorSpecificField;
            }
            set {
                this.processorSpecificField = value;
            }
        }
        
        /// <remarks/>
        public string CustomFilter {
            get {
                return this.customFilterField;
            }
            set {
                this.customFilterField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreDefaultLibPath {
            get {
                return this.ignoreDefaultLibPathField;
            }
            set {
                this.ignoreDefaultLibPathField = value;
            }
        }
        
        /// <remarks/>
        public bool IsStub {
            get {
                return this.isStubField;
            }
            set {
                this.isStubField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public System.Collections.Generic.List<MFProperty> Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFComponent {
        
        private Version versionDependencyField;
        
        private MFComponentType componentTypeField;
        
        private string nameField;
        
        private string guidField;
        
        private string projectPathField;
        
        private string conditionalField;
        
        private int refCountField;
        
        private bool refCountFieldSpecified;
        
        /// <remarks/>
        public Version VersionDependency {
            get {
                return this.versionDependencyField;
            }
            set {
                this.versionDependencyField = value;
            }
        }
        
        /// <remarks/>
        public MFComponentType ComponentType {
            get {
                return this.componentTypeField;
            }
            set {
                this.componentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RefCount {
            get {
                return this.refCountField;
            }
            set {
                this.refCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefCountSpecified {
            get {
                return this.refCountFieldSpecified;
            }
            set {
                this.refCountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class Version {
        
        private string majorField;
        
        private string minorField;
        
        private string revisionField;
        
        private string buildField;
        
        private string extraField;
        
        private System.DateTime dateField;
        
        private string authorField;
        
        /// <remarks/>
        public string Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
            }
        }
        
        /// <remarks/>
        public string Minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
            }
        }
        
        /// <remarks/>
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        public string Extra {
            get {
                return this.extraField;
            }
            set {
                this.extraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class ApiTemplate {
        
        private string filePathField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class LibraryCategory {
        
        private string nameField;
        
        private string guidField;
        
        private string descriptionField;
        
        private LibraryLevel levelField;
        
        private string groupsField;
        
        private System.Collections.Generic.List<ApiTemplate> templatesField;
        
        private string documentationField;
        
        private MFComponent stubLibraryField;
        
        private Version versionField;
        
        private bool requiredField;
        
        private bool ignoreDefaultLibPathField;
        
        private string projectPathField;
        
        private System.Collections.Generic.List<string> libraryProjCacheField;
        
        private System.Collections.Generic.List<MFComponent> featureAssociationsField;
        
        private bool isTransportField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public LibraryLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public string Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Templates")]
        public System.Collections.Generic.List<ApiTemplate> Templates {
            get {
                return this.templatesField;
            }
            set {
                this.templatesField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent StubLibrary {
            get {
                return this.stubLibraryField;
            }
            set {
                this.stubLibraryField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreDefaultLibPath {
            get {
                return this.ignoreDefaultLibPathField;
            }
            set {
                this.ignoreDefaultLibPathField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LibraryProjCache")]
        public System.Collections.Generic.List<string> LibraryProjCache {
            get {
                return this.libraryProjCacheField;
            }
            set {
                this.libraryProjCacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FeatureAssociations")]
        public System.Collections.Generic.List<MFComponent> FeatureAssociations {
            get {
                return this.featureAssociationsField;
            }
            set {
                this.featureAssociationsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTransport {
            get {
                return this.isTransportField;
            }
            set {
                this.isTransportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public enum LibraryLevel {
        
        /// <remarks/>
        CLR,
        
        /// <remarks/>
        PAL,
        
        /// <remarks/>
        HAL,
        
        /// <remarks/>
        Support,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildParameter {
        
        private string parameterField;
        
        private string actionField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MiscBuildTool {
        
        private string nameField;
        
        private string guidField;
        
        private BuildToolDefine buildToolField;
        
        private ToolOptions buildToolOptionsField;
        
        private string buildToolWrapperField;
        
        private System.Collections.Generic.List<EnvVar> environmentVariablesField;
        
        private string toolPathField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine BuildTool {
            get {
                return this.buildToolField;
            }
            set {
                this.buildToolField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions BuildToolOptions {
            get {
                return this.buildToolOptionsField;
            }
            set {
                this.buildToolOptionsField = value;
            }
        }
        
        /// <remarks/>
        public string BuildToolWrapper {
            get {
                return this.buildToolWrapperField;
            }
            set {
                this.buildToolWrapperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentVariables")]
        public System.Collections.Generic.List<EnvVar> EnvironmentVariables {
            get {
                return this.environmentVariablesField;
            }
            set {
                this.environmentVariablesField = value;
            }
        }
        
        /// <remarks/>
        public string ToolPath {
            get {
                return this.toolPathField;
            }
            set {
                this.toolPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildToolDefine {
        
        private string execField;
        
        private string descriptionField;
        
        private string conditionalField;
        
        /// <remarks/>
        public string Exec {
            get {
                return this.execField;
            }
            set {
                this.execField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class ToolOptions {
        
        private BuildToolParameters buildToolParametersField;
        
        private System.Collections.Generic.List<ToolFlag> toolFlagsField;
        
        /// <remarks/>
        public BuildToolParameters BuildToolParameters {
            get {
                return this.buildToolParametersField;
            }
            set {
                this.buildToolParametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ToolFlags")]
        public System.Collections.Generic.List<ToolFlag> ToolFlags {
            get {
                return this.toolFlagsField;
            }
            set {
                this.toolFlagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildToolParameters {
        
        private System.Collections.Generic.List<BuildScript> parametersField;
        
        private System.Collections.Generic.List<BuildScript> preBuildField;
        
        private System.Collections.Generic.List<BuildScript> postBuildField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Parameters")]
        public System.Collections.Generic.List<BuildScript> Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PreBuild")]
        public System.Collections.Generic.List<BuildScript> PreBuild {
            get {
                return this.preBuildField;
            }
            set {
                this.preBuildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PostBuild")]
        public System.Collections.Generic.List<BuildScript> PostBuild {
            get {
                return this.postBuildField;
            }
            set {
                this.postBuildField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildScript {
        
        private string conditionalField;
        
        private string scriptField;
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public string Script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class ToolFlag {
        
        private string conditionalField;
        
        private string flagField;
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public string Flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class EnvVar {
        
        private string nameField;
        
        private string valueField;
        
        private string conditionalField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class ISA {
        
        private string nameField;
        
        private string guidField;
        
        private string descriptionField;
        
        private string documentationField;
        
        private Version versionField;
        
        private ToolChainOptions buildToolOptionsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public ToolChainOptions BuildToolOptions {
            get {
                return this.buildToolOptionsField;
            }
            set {
                this.buildToolOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class ToolChainOptions {
        
        private string toolNameField;
        
        private string conditionField;
        
        private string deviceTypeField;
        
        private System.Collections.Generic.List<ToolFlag> commonFlagsField;
        
        private ToolOptions asmFlagsField;
        
        private System.Collections.Generic.List<ToolFlag> c_CppFlagsField;
        
        private ToolOptions cFlagsField;
        
        private ToolOptions cppFlagsField;
        
        private ToolOptions linkerFlagsField;
        
        private System.Collections.Generic.List<EnvVar> environmentVariablesField;
        
        private ToolOptions archiverFlagsField;
        
        /// <remarks/>
        public string ToolName {
            get {
                return this.toolNameField;
            }
            set {
                this.toolNameField = value;
            }
        }
        
        /// <remarks/>
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CommonFlags")]
        public System.Collections.Generic.List<ToolFlag> CommonFlags {
            get {
                return this.commonFlagsField;
            }
            set {
                this.commonFlagsField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions AsmFlags {
            get {
                return this.asmFlagsField;
            }
            set {
                this.asmFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("C_CppFlags")]
        public System.Collections.Generic.List<ToolFlag> C_CppFlags {
            get {
                return this.c_CppFlagsField;
            }
            set {
                this.c_CppFlagsField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions CFlags {
            get {
                return this.cFlagsField;
            }
            set {
                this.cFlagsField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions CppFlags {
            get {
                return this.cppFlagsField;
            }
            set {
                this.cppFlagsField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions LinkerFlags {
            get {
                return this.linkerFlagsField;
            }
            set {
                this.linkerFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentVariables")]
        public System.Collections.Generic.List<EnvVar> EnvironmentVariables {
            get {
                return this.environmentVariablesField;
            }
            set {
                this.environmentVariablesField = value;
            }
        }
        
        /// <remarks/>
        public ToolOptions ArchiverFlags {
            get {
                return this.archiverFlagsField;
            }
            set {
                this.archiverFlagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildTool {
        
        private string nameField;
        
        private string guidField;
        
        private string objExtField;
        
        private string libExtField;
        
        private string binExtField;
        
        private string dbgExtField;
        
        private BuildToolDefine asmCompilerField;
        
        private BuildToolDefine cCompilerField;
        
        private BuildToolDefine cppCompilerField;
        
        private BuildToolDefine linkerField;
        
        private BuildToolDefine archiverField;
        
        private BuildToolDefine fromELFField;
        
        private string toolPathField;
        
        private System.Collections.Generic.List<ISA> supportedISAsField;
        
        private System.Collections.Generic.List<string> supportedCpuNamesField;
        
        private ToolChainOptions buildOptionsField;
        
        private string buildToolWrapperField;
        
        private System.Collections.Generic.List<MiscBuildTool> miscToolsField;
        
        private string documentationField;
        
        private string projectPathField;
        
        private Version versionField;
        
        private System.Collections.Generic.List<MFProperty> propertiesField;
        
        private System.Collections.Generic.List<MFProperty> itemsField;
        
        private bool isSolutionWizardVisibleField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string ObjExt {
            get {
                return this.objExtField;
            }
            set {
                this.objExtField = value;
            }
        }
        
        /// <remarks/>
        public string LibExt {
            get {
                return this.libExtField;
            }
            set {
                this.libExtField = value;
            }
        }
        
        /// <remarks/>
        public string BinExt {
            get {
                return this.binExtField;
            }
            set {
                this.binExtField = value;
            }
        }
        
        /// <remarks/>
        public string DbgExt {
            get {
                return this.dbgExtField;
            }
            set {
                this.dbgExtField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine AsmCompiler {
            get {
                return this.asmCompilerField;
            }
            set {
                this.asmCompilerField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine CCompiler {
            get {
                return this.cCompilerField;
            }
            set {
                this.cCompilerField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine CppCompiler {
            get {
                return this.cppCompilerField;
            }
            set {
                this.cppCompilerField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine Linker {
            get {
                return this.linkerField;
            }
            set {
                this.linkerField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine Archiver {
            get {
                return this.archiverField;
            }
            set {
                this.archiverField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolDefine FromELF {
            get {
                return this.fromELFField;
            }
            set {
                this.fromELFField = value;
            }
        }
        
        /// <remarks/>
        public string ToolPath {
            get {
                return this.toolPathField;
            }
            set {
                this.toolPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedISAs")]
        public System.Collections.Generic.List<ISA> SupportedISAs {
            get {
                return this.supportedISAsField;
            }
            set {
                this.supportedISAsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedCpuNames")]
        public System.Collections.Generic.List<string> SupportedCpuNames {
            get {
                return this.supportedCpuNamesField;
            }
            set {
                this.supportedCpuNamesField = value;
            }
        }
        
        /// <remarks/>
        public ToolChainOptions BuildOptions {
            get {
                return this.buildOptionsField;
            }
            set {
                this.buildOptionsField = value;
            }
        }
        
        /// <remarks/>
        public string BuildToolWrapper {
            get {
                return this.buildToolWrapperField;
            }
            set {
                this.buildToolWrapperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MiscTools")]
        public System.Collections.Generic.List<MiscBuildTool> MiscTools {
            get {
                return this.miscToolsField;
            }
            set {
                this.miscToolsField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public System.Collections.Generic.List<MFProperty> Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public System.Collections.Generic.List<MFProperty> Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFProperty {
        
        private string nameField;
        
        private string valueField;
        
        private string conditionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class Processor {
        
        private string nameField;
        
        private string cpuNameField;
        
        private string defaultISAField;
        
        private System.Collections.Generic.List<MFComponent> supportedISAsField;
        
        private System.Collections.Generic.List<BuildToolRef> buildToolOptionsField;
        
        private string guidField;
        
        private string descriptionField;
        
        private string documentationField;
        
        private string projectPathField;
        
        private string platformFamilyField;
        
        private string customFilterField;
        
        private System.Collections.Generic.List<MFProperty> propertiesField;
        
        private Version versionField;
        
        private bool isSolutionWizardVisibleField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CpuName {
            get {
                return this.cpuNameField;
            }
            set {
                this.cpuNameField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultISA {
            get {
                return this.defaultISAField;
            }
            set {
                this.defaultISAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedISAs")]
        public System.Collections.Generic.List<MFComponent> SupportedISAs {
            get {
                return this.supportedISAsField;
            }
            set {
                this.supportedISAsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BuildToolOptions")]
        public System.Collections.Generic.List<BuildToolRef> BuildToolOptions {
            get {
                return this.buildToolOptionsField;
            }
            set {
                this.buildToolOptionsField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public string PlatformFamily {
            get {
                return this.platformFamilyField;
            }
            set {
                this.platformFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string CustomFilter {
            get {
                return this.customFilterField;
            }
            set {
                this.customFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public System.Collections.Generic.List<MFProperty> Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class BuildToolRef {
        
        private string nameField;
        
        private string guidField;
        
        private ToolChainOptions buildOptionsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public ToolChainOptions BuildOptions {
            get {
                return this.buildOptionsField;
            }
            set {
                this.buildOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class EnvVars {
        
        private System.Collections.Generic.List<EnvVar> envVarCollectionField;
        
        private string conditionalField;
        
        private string nameField;
        
        private System.Collections.Generic.List<EnvVars> envVarsCollectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvVarCollection")]
        public System.Collections.Generic.List<EnvVar> EnvVarCollection {
            get {
                return this.envVarCollectionField;
            }
            set {
                this.envVarCollectionField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvVarsCollection")]
        public System.Collections.Generic.List<EnvVars> EnvVarsCollection {
            get {
                return this.envVarsCollectionField;
            }
            set {
                this.envVarsCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MemorySymbol {
        
        private string nameField;
        
        private string optionsField;
        
        private string descriptionField;
        
        private string conditionalField;
        
        private int orderField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public int Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MemorySection {
        
        private string nameField;
        
        private System.Collections.Generic.List<MemorySymbol> symbolsField;
        
        private string addressField;
        
        private string sizeField;
        
        private string optionsField;
        
        private string descriptionField;
        
        private string conditionalField;
        
        private int orderField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Symbols")]
        public System.Collections.Generic.List<MemorySymbol> Symbols {
            get {
                return this.symbolsField;
            }
            set {
                this.symbolsField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public int Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MemoryRegion {
        
        private System.Collections.Generic.List<MemorySection> sectionsField;
        
        private string addressField;
        
        private string sizeField;
        
        private string optionsField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string conditionalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sections")]
        public System.Collections.Generic.List<MemorySection> Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MemoryMap {
        
        private System.Collections.Generic.List<MemoryRegion> regionsField;
        
        private string conditionalField;
        
        private string descriptionField;
        
        private string nameField;
        
        private EnvVars environmentVariablesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Regions")]
        public System.Collections.Generic.List<MemoryRegion> Regions {
            get {
                return this.regionsField;
            }
            set {
                this.regionsField = value;
            }
        }
        
        /// <remarks/>
        public string Conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public EnvVars EnvironmentVariables {
            get {
                return this.environmentVariablesField;
            }
            set {
                this.environmentVariablesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFProject {
        
        private string nameField;
        
        private Version versionField;
        
        private string guidField;
        
        private string descriptionField;
        
        private string documentationField;
        
        private string directoryField;
        
        private bool isClrProjectField;
        
        private System.Collections.Generic.List<MFComponent> featuresField;
        
        private System.Collections.Generic.List<MFComponent> librariesField;
        
        private System.Collections.Generic.List<MFComponent> libraryCategoriesField;
        
        private System.Collections.Generic.List<string> interopFeaturesField;
        
        private System.Collections.Generic.List<string> extraAssembliesField;
        
        private System.Collections.Generic.List<MFBuildFile> sourceFilesField;
        
        private System.Collections.Generic.List<MFBuildFile> headerFilesField;
        
        private System.Collections.Generic.List<MFBuildFile> includePathsField;
        
        private System.Collections.Generic.List<MFBuildFile> fastCompileFilesField;
        
        private MFBuildFile scatterFileField;
        
        private System.Collections.Generic.List<MFBuildFile> otherFilesField;
        
        private BuildToolRef buildToolField;
        
        private MemoryMap memoryMapField;
        
        private string projectPathField;
        
        private string settingsFileField;
        
        private System.Collections.Generic.List<MFProperty> propertiesField;
        
        private bool isSolutionWizardVisibleField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string Directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClrProject {
            get {
                return this.isClrProjectField;
            }
            set {
                this.isClrProjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Features")]
        public System.Collections.Generic.List<MFComponent> Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Libraries")]
        public System.Collections.Generic.List<MFComponent> Libraries {
            get {
                return this.librariesField;
            }
            set {
                this.librariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LibraryCategories")]
        public System.Collections.Generic.List<MFComponent> LibraryCategories {
            get {
                return this.libraryCategoriesField;
            }
            set {
                this.libraryCategoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InteropFeatures")]
        public System.Collections.Generic.List<string> InteropFeatures {
            get {
                return this.interopFeaturesField;
            }
            set {
                this.interopFeaturesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtraAssemblies")]
        public System.Collections.Generic.List<string> ExtraAssemblies {
            get {
                return this.extraAssembliesField;
            }
            set {
                this.extraAssembliesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SourceFiles")]
        public System.Collections.Generic.List<MFBuildFile> SourceFiles {
            get {
                return this.sourceFilesField;
            }
            set {
                this.sourceFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HeaderFiles")]
        public System.Collections.Generic.List<MFBuildFile> HeaderFiles {
            get {
                return this.headerFilesField;
            }
            set {
                this.headerFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IncludePaths")]
        public System.Collections.Generic.List<MFBuildFile> IncludePaths {
            get {
                return this.includePathsField;
            }
            set {
                this.includePathsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FastCompileFiles")]
        public System.Collections.Generic.List<MFBuildFile> FastCompileFiles {
            get {
                return this.fastCompileFilesField;
            }
            set {
                this.fastCompileFilesField = value;
            }
        }
        
        /// <remarks/>
        public MFBuildFile ScatterFile {
            get {
                return this.scatterFileField;
            }
            set {
                this.scatterFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OtherFiles")]
        public System.Collections.Generic.List<MFBuildFile> OtherFiles {
            get {
                return this.otherFilesField;
            }
            set {
                this.otherFilesField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolRef BuildTool {
            get {
                return this.buildToolField;
            }
            set {
                this.buildToolField = value;
            }
        }
        
        /// <remarks/>
        public MemoryMap MemoryMap {
            get {
                return this.memoryMapField;
            }
            set {
                this.memoryMapField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public string SettingsFile {
            get {
                return this.settingsFileField;
            }
            set {
                this.settingsFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public System.Collections.Generic.List<MFProperty> Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFBuildFile {
        
        private string itemNameField;
        
        private string fileField;
        
        private string conditionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFSolution {
        
        private string nameField;
        
        private string authorField;
        
        private Version versionField;
        
        private string guidField;
        
        private string descriptionField;
        
        private string documentationField;
        
        private System.Collections.Generic.List<MFProject> projectsField;
        
        private BuildToolRef buildToolField;
        
        private MFComponent processorField;
        
        private string projectPathField;
        
        private MFComponent defaultISAField;
        
        private string memoryProfileField;
        
        private int ramBaseField;
        
        private int ramLengthField;
        
        private int flashBaseField;
        
        private int flashLengthField;
        
        private int systemClockSpeedField;
        
        private int slowClockSpeedField;
        
        private string debuggerPortField;
        
        private System.Collections.Generic.List<MFProperty> propertiesField;
        
        private System.Collections.Generic.List<MFBuildFile> itemsField;
        
        private string customFilterField;
        
        private bool isSolutionWizardVisibleField;
        
        private string eNDIANNESSField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public Version Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Projects")]
        public System.Collections.Generic.List<MFProject> Projects {
            get {
                return this.projectsField;
            }
            set {
                this.projectsField = value;
            }
        }
        
        /// <remarks/>
        public BuildToolRef BuildTool {
            get {
                return this.buildToolField;
            }
            set {
                this.buildToolField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent Processor {
            get {
                return this.processorField;
            }
            set {
                this.processorField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public MFComponent DefaultISA {
            get {
                return this.defaultISAField;
            }
            set {
                this.defaultISAField = value;
            }
        }
        
        /// <remarks/>
        public string MemoryProfile {
            get {
                return this.memoryProfileField;
            }
            set {
                this.memoryProfileField = value;
            }
        }
        
        /// <remarks/>
        public int RamBase {
            get {
                return this.ramBaseField;
            }
            set {
                this.ramBaseField = value;
            }
        }
        
        /// <remarks/>
        public int RamLength {
            get {
                return this.ramLengthField;
            }
            set {
                this.ramLengthField = value;
            }
        }
        
        /// <remarks/>
        public int FlashBase {
            get {
                return this.flashBaseField;
            }
            set {
                this.flashBaseField = value;
            }
        }
        
        /// <remarks/>
        public int FlashLength {
            get {
                return this.flashLengthField;
            }
            set {
                this.flashLengthField = value;
            }
        }
        
        /// <remarks/>
        public int SystemClockSpeed {
            get {
                return this.systemClockSpeedField;
            }
            set {
                this.systemClockSpeedField = value;
            }
        }
        
        /// <remarks/>
        public int SlowClockSpeed {
            get {
                return this.slowClockSpeedField;
            }
            set {
                this.slowClockSpeedField = value;
            }
        }
        
        /// <remarks/>
        public string DebuggerPort {
            get {
                return this.debuggerPortField;
            }
            set {
                this.debuggerPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public System.Collections.Generic.List<MFProperty> Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public System.Collections.Generic.List<MFBuildFile> Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomFilter {
            get {
                return this.customFilterField;
            }
            set {
                this.customFilterField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
        
        /// <remarks/>
        public string ENDIANNESS {
            get {
                return this.eNDIANNESSField;
            }
            set {
                this.eNDIANNESSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class MFAssembly {
        
        private string nameField;
        
        private string guidField;
        
        private string descriptionField;
        
        private string groupsField;
        
        private string projectPathField;
        
        private string assemblyFileField;
        
        private System.Collections.Generic.List<MFComponent> referencesField;
        
        private bool isSolutionWizardVisibleField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public string AssemblyFile {
            get {
                return this.assemblyFileField;
            }
            set {
                this.assemblyFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("References")]
        public System.Collections.Generic.List<MFComponent> References {
            get {
                return this.referencesField;
            }
            set {
                this.referencesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public partial class Feature {
        
        private string nameField;
        
        private string guidField;
        
        private System.Collections.Generic.List<MFComponent> featureDependenciesField;
        
        private string descriptionField;
        
        private string groupsField;
        
        private System.Collections.Generic.List<MFComponent> componentDependenciesField;
        
        private string documentationField;
        
        private string projectPathField;
        
        private bool requiredField;
        
        private bool hiddenField;
        
        private System.Collections.Generic.List<MFComponent> assembliesField;
        
        private bool isSolutionWizardVisibleField;

        private string filterField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FeatureDependencies")]
        public System.Collections.Generic.List<MFComponent> FeatureDependencies {
            get {
                return this.featureDependenciesField;
            }
            set {
                this.featureDependenciesField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ComponentDependencies")]
        public System.Collections.Generic.List<MFComponent> ComponentDependencies {
            get {
                return this.componentDependenciesField;
            }
            set {
                this.componentDependenciesField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectPath {
            get {
                return this.projectPathField;
            }
            set {
                this.projectPathField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public bool Hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Assemblies")]
        public System.Collections.Generic.List<MFComponent> Assemblies {
            get {
                return this.assembliesField;
            }
            set {
                this.assembliesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSolutionWizardVisible {
            get {
                return this.isSolutionWizardVisibleField;
            }
            set {
                this.isSolutionWizardVisibleField = value;
            }
        }

        /// <remarks/>
        public string Filter
        {
            get
            {
                return this.filterField;
            }
            set
            {
                this.filterField = value;
            }
        }

    }

    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/netmf/InventoryFormat.xsd")]
    public enum MFComponentType {
        
        /// <remarks/>
        Library,
        
        /// <remarks/>
        Feature,
        
        /// <remarks/>
        MFAssembly,
        
        /// <remarks/>
        MFSolution,
        
        /// <remarks/>
        Processor,
        
        /// <remarks/>
        OperatingSystem,
        
        /// <remarks/>
        BuildTool,
        
        /// <remarks/>
        ISA,
        
        /// <remarks/>
        BuildParameter,
        
        /// <remarks/>
        LibraryCategory,
        
        /// <remarks/>
        Unknown,
    }
}
